package hu.neuron.java.core;

import hu.neuron.java.common.dao.RoleDAO;
import hu.neuron.java.common.dto.RoleDTO;
import hu.neuron.java.core.dao.impl.UserDAOImpl;

import javax.sql.DataSource;

import org.apache.log4j.Logger;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.jdbc.core.JdbcTemplate;
import org.springframework.stereotype.Component;
import org.springframework.transaction.annotation.Propagation;
import org.springframework.transaction.annotation.Transactional;

@Component
@Transactional(propagation = Propagation.REQUIRED)
public class CreateShema {
	private static final Logger logger = Logger.getLogger(UserDAOImpl.class);

	private JdbcTemplate jdbcTemplate;

	@Autowired
	public void setDataSource(DataSource dataSource) {
		this.jdbcTemplate = new JdbcTemplate(dataSource);
	}

	@Autowired
	public RoleDAO roleDAO;

	public void create() {
		try {
			this.jdbcTemplate
					.execute("create table user (ID int GENERATED BY DEFAULT AS IDENTITY (START WITH 1, INCREMENT BY 1) , name varchar(100),password varchar(100))");

			this.jdbcTemplate
					.execute("create table role (ID int GENERATED BY DEFAULT AS IDENTITY (START WITH 1, INCREMENT BY 1) , name varchar(100))");

			this.jdbcTemplate
					.execute("create table user_role_sw (ID int GENERATED BY DEFAULT AS IDENTITY (START WITH 1, INCREMENT BY 1) , user_id int,role_id int)");
		} catch (Exception e) {
			logger.error(e.getMessage(), e);
		}
	}

	public void insertRoles() {
		RoleDTO dto = null;
		try {
			if (roleDAO.findRoleByName("USER") == null) {
				dto = new RoleDTO(null, "USER");
				roleDAO.save(dto);
			}
			if (roleDAO.findRoleByName("ADMIN") == null) {
				dto = new RoleDTO(null, "ADMIN");
				roleDAO.save(dto);
			}
		} catch (Exception e) {
			logger.error(e.getMessage(), e);
		}
	}

}
